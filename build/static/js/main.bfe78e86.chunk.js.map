{"version":3,"sources":["GlobalStyle.js","images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImg/HeroImage.style.js","components/HeroImg/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumbs/Thumbs.style.js","components/Thumbs/index.js","components/Spinner /index.js","components/Spinner /Spiner.style.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","components/Home.js","components/BreadCrumb/BreadCrumb.style.js","components/BreadCrumb/index.js","components/Movieinfo/Movieinfo.styles.js","components/Movieinfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Wrapper","styled","div","Content","LogoImg","img","TMBDLogoImg","Header","to","src","RMDBLogo","alt","TMBDLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","value","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Grid","header","children","Image","Thumbs","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","button","Button","callback","onClick","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfe78e86.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px; \n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535; \n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;  \n  }\n  body {  \n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMBDLogoImg = styled.img`\n  width: 100px;\n  @media screen and (max-width: 500px) {\n    width: 80px;\n  }\n`;\n","import React from \"react\";\n\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\nimport TMBDLogo from \"../../images/tmdb_logo.svg\";\n\nimport { Wrapper, Content, LogoImg, TMBDLogoImg } from \"./Header.styles\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => (\n  <Wrapper>\n    <Content>\n      <Link to=\"./\">\n        <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\n      </Link>\n      <TMBDLogoImg src={TMBDLogo} alt=\"tmbdlogo\" />\n    </Content>\n  </Wrapper>\n);\n\nexport default Header;\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"0d943e1dbbc0ffd06673843d33fdfd0e\";\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w780\";\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0) 39%,\n      rgba(0, 0, 0, 0) 41%,\n      rgba(0, 0, 0, 0.65) 100%\n    ),\n    url(${({ image }) => image}), var(--darkGrey);\n  background-size: 100%, cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animationHeroImage 1s;\n\n  @keyframes animationHeroImage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 20px;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 40px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n  h1 {\n    font-size: var(--fontSuperBig);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n  p {\n    font-size: var(--fontMed);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;\n","import React from \"react\";\n\n// Styles\n\nimport { Wrapper, Content, Text } from \"./HeroImage.style\";\n\nconst HeroImage = ({ image, title, text }) => (\n  <Wrapper image={image}>\n    <Content>\n      <Text>\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </Text>\n    </Content>\n  </Wrapper>\n);\n\nexport default HeroImage;\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = (stateName) => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionStorage && JSON.parse(sessionState);\n};\n","import { useState, useEffect } from \"react\";\n// API\nimport API from \"../API\";\n// Helpers\nimport { isPersistedState } from \"../helpers\";\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0,\n};\n\nexport const useHomeFetch = () => {\n  const [searchTerm, setSearchTerm] = useState();\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const movies = await API.fetchMovies(searchTerm, page);\n\n      setState((prev) => ({\n        ...movies,\n        results:\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\n      }));\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  // Initial and Search\n  useEffect(() => {\n    if (!searchTerm) {\n      const sessionState = isPersistedState(\"homeState\");\n\n      if (sessionState) {\n        setState(sessionState);\n        return;\n      }\n    }\n    setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]);\n  // Load more\n\n  useEffect(() => {\n    if (!isLoadingMore) return;\n    fetchMovies(state.page + 1, searchTerm);\n    setIsLoadingMore(false);\n  }, [isLoadingMore, searchTerm, state.page]);\n\n  // Write to the session storage\n  useEffect(() => {\n    if (!searchTerm) sessionStorage.setItem(\"homeState\", JSON.stringify(state));\n  }, [searchTerm, state]);\n\n  return { state, loading, error, setSearchTerm, setIsLoadingMore };\n};\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import styled from \"styled-components\";\nexport const Wrapper = styled.div`\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  padding: 0 20px;\n\n  h1 {\n    color: var(--medGray);\n    padding: 20px 0;\n  }\n  @media screen and (max-width: 768px) {\n    font-size: var(--fontBig);\n  }\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 2rem;\n`;\n","import React from \"react\";\n\n//styles\n\nimport { Wrapper, Content } from \"./Grid.styles\";\n\nconst Grid = ({ header, children }) => (\n  <Wrapper>\n    <h1>{header}</h1>\n    <Content>{children}</Content>\n  </Wrapper>\n);\n\nexport default Grid;\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animationThumb 0.5s;\n\n  @keyframes animationThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// Styles\n\nimport { Image } from \"./Thumbs.style\";\n\nconst Thumbs = ({ image, movieId, clickable }) => (\n  <div>\n    {clickable ? (\n      <Link to={`/${movieId}`}>\n        {\" \"}\n        <Image src={image} alt=\"movie-thumb\" />\n      </Link>\n    ) : (\n      <Image src={image} alt=\"movie-thumb\" />\n    )}\n  </div>\n);\n\nexport default Thumbs;\n","import { Spinner } from \"./Spiner.style\";\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey);\n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  max-width: var(--maxWidth);\n  width: 100%;\n  height: 55px;\n  background: var(--medGrey);\n  margin: 0 auto;\n  border-radius: 40px;\n  color: var(--white);\n\n  img {\n    position: absolute;\n    left: 15px;\n    top: 14px;\n    width: 30px;\n  }\n  input {\n    font-size: var(--fontBig);\n    position: absolute;\n    left: 0;\n    padding: 0 0 0 60px;\n    width: 95%;\n    background: transparent;\n    border: 0;\n    height: 40px;\n    margin: 8px 0;\n    color: var(--white);\n\n    :focus {\n      outline: none;\n    }\n  }\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// Image\nimport searchIcon from \"../../images/search-icon.svg\";\n// Styles\nimport { Wrapper, Content } from \"./SearchBar.styles\";\n\nconst SearchBar = ({ setSearchTerm }) => {\n  const [state, setState] = useState(\"\");\n  const initial = useRef(true);\n\n  useEffect(() => {\n    if (initial.current) {\n      initial.current = false;\n    }\n    const timer = setTimeout(() => {\n      setSearchTerm(state);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [setSearchTerm, state]);\n  return (\n    <Wrapper>\n      <Content>\n        <img src={searchIcon} alt=\"search-icon\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search Movie\"\n          onChange={(event) => setState(event.currentTarget.value)}\n          value={state}\n        />\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default SearchBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.button`\n  display: block;\n  background: var(--darkGrey);\n  width: 25%;\n  min-width: 200px;\n  height: 60px;\n  border-radius: 30px;\n  color: var(--white);\n  border: 0;\n  font-size: var(--fontBig);\n  margin: 20px auto;\n  transition: all 0.3s;\n  outline: none;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from \"react\";\n// Styles\nimport { Wrapper } from \"./Button.styles\";\n\nconst Button = ({ text, callback }) => (\n  <Wrapper type=\"button\" onClick={callback}>\n    {text}\n  </Wrapper>\n);\n\nexport default Button;\n","import React from \"react\";\n// Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\n// Components\nimport HeroImage from \"./HeroImg\";\n// Hook\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\n// Image\nimport NoImage from \"../images/no_image.jpg\";\nimport Grid from \"./Grid\";\nimport Thumbs from \"./Thumbs\";\nimport Spinner from \"./Spinner \";\nimport SearchBar from \"./SearchBar\";\nimport Button from \"./Button\";\n\nconst Home = () => {\n  const { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore } =\n    useHomeFetch();\n  if (error) return <div>Something went wrong ...</div>;\n\n  return (\n    <>\n      {!searchTerm && state.results[0] ? (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n          title={state.results[0].original_title}\n          text={state.results[0].overview}\n        />\n      ) : null}\n      <SearchBar setSearchTerm={setSearchTerm} />\n      <Grid header={searchTerm ? \"Search Results\" : \"Popular Movies\"}>\n        {state.results.map((movie) => (\n          <Thumbs\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {state.page < state.total_pages && !loading && (\n        <Button text=\"Load More\" callback={() => setIsLoadingMore(true)} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  background: var(--medGrey);\n  color: var(--white);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: var(--maxWidth);\n  padding: 0 20px;\n  height: 70px;\n  align-items: center;\n\n  span {\n    font-size: var(--fontMed);\n    color: var(--white);\n    padding-right: 10px;\n\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontSmall);\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n// styles\n\nimport { Wrapper, Content } from \"./BreadCrumb.style\";\nimport Home from \"../Home\";\n\nconst BreadCrumb = ({ movieTitle }) => (\n  <Wrapper>\n    <Content>\n      <Link to=\"/\">\n        <span>Home</span>\n      </Link>\n      <span>|</span>\n      <span> {movieTitle}</span>\n    </Content>\n  </Wrapper>\n);\nexport default BreadCrumb;\n","import styled from \"styled-components\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n\nexport const Wrapper = styled.div`\n  background: ${({ backdrop }) =>\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : \"#000\"};\n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieInfo 1s;\n`;\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  background: rgba(0, 0, 0, 0.7);\n  margin: 0 auto;\n  border-radius: 20px;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    max-height: none;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  padding: 20px 40px;\n  color: var(--white);\n  overflow: hidden;\n\n  .rating-directors {\n    display: flex;\n    justify-content: flex-start;\n  }\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 50%;\n    margin: 0;\n  }\n  .director {\n    margin: 0 0 0 40px;\n  }\n  p {\n    margin: 0;\n  }\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n","import React from \"react\";\n// Components\n\nimport Thumb from \"../Thumbs\";\n//Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\n// Image\nimport NoImage from \"../../images/no_image.jpg\";\n// Styles\nimport { Wrapper, Content, Text } from \"./Movieinfo.styles\";\n\nconst MovieInfo = ({ movie }) => (\n  <Wrapper backdrop={movie.backdrop_path}>\n    <Content>\n      <Thumb\n        image={\n          movie.poster_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n            : NoImage\n        }\n        clickable={false}\n        alt=\"movie-thumb\"\n      />\n      <Text>\n        <h1> {movie.title}</h1>\n        <h3> PLOT</h3>\n        <p>{movie.overview}</p>\n        <div className=\"rating-directors\">\n          <div>\n            <h3> RATING</h3>\n            <div className=\"score\">{movie.vote_average}</div>\n          </div>\n          <div className=\"director\">\n            <h3>DIRECTOR {movie.directors.length > 1 ? \"S\" : \"\"} </h3>\n            {movie.directors.map((director) => (\n              <p key={director.credit_id}>{director.name}</p>\n            ))}\n          </div>\n        </div>\n      </Text>\n    </Content>\n  </Wrapper>\n);\nexport default MovieInfo;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  width: 100%;\n  margin: 0 auto;\n\n  .column {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--medGrey);\n    border-radius: 20px;\n    margin: 0 20px;\n    flex: 1;\n  }\n  :first-child {\n    margin-left: 0;\n  }\n  :last-child {\n    margin-right: 0;\n  }\n  @media screen and (max-width: 768px) {\n    display: block;\n    .column {\n      margin: 20px 0;\n    }\n  }\n`;\n","import React from \"react\";\n// Helpers\nimport { calcTime, convertMoney } from \"../../helpers\";\n// Styles\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n  <Wrapper>\n    <Content>\n      <div className=\"column\">\n        <p> Running Time {calcTime(time)}</p>\n      </div>\n      <div className=\"column\">\n        <p>Budget {convertMoney(budget)}</p>\n      </div>\n      <div className=\"column\">\n        <p> Revenue {convertMoney(revenue)}</p>\n      </div>\n    </Content>\n  </Wrapper>\n);\n\nexport default MovieInfoBar;\n","import styled from \"styled-components\";\nexport const Wrapper = styled.div`\n  color: var(--white);\n  background: var(--darkGrey);\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n  h3 {\n    margin: 10px 0 0 0;\n  }\n  p {\n    margin: 5px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  border-radius: 20px;\n  width: 100%;\n`;\n","import React from \"react\";\n// Styled\nimport { Wrapper, Image } from \"./Actor.styles\";\n\nconst Actor = ({ name, character, imageUrl }) => (\n  <Wrapper>\n    <Image src={imageUrl} alt=\"actor-thumb\" />\n    <h3>{name}</h3>\n    <p>{character}</p>\n  </Wrapper>\n);\n\nexport default Actor;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n// config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\n//components\nimport Grid from \"./Grid\";\nimport Spinner from \"./Spinner \";\n// Hook\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\n//Image\nimport NoImage from \"../images/no_image.jpg\";\n// Components\nimport BreadCrumb from \"./BreadCrumb\";\nimport MovieInfo from \"./Movieinfo\";\nimport MovieInfoBar from \"./MovieInfoBar\";\nimport Actor from \"./Actor\";\n\nconst Movie = () => {\n  const { movieId } = useParams();\n  const { state: movie, loading, error } = useMovieFetch(movieId);\n  if (loading) return <Spinner />;\n  if (error) return <div>Something went wrong</div>;\n  return (\n    <>\n      <BreadCrumb movieTitle={movie.original_title} />\n      <MovieInfo movie={movie} />\n      <MovieInfoBar\n        time={movie.runtime}\n        budget={movie.budget}\n        revenue={movie.revenue}\n      />\n      <Grid header=\"Actors\">\n        {movie.actors.map((actor) => (\n          <Actor\n            key={actor.credit_id}\n            name={actor.name}\n            character={actor.character}\n            imageUrl={\n              actor.profile_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                : NoImage\n            }\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Movie;\n","import { useState, useEffect } from \"react\";\nimport API from \"../API\";\nimport { isPersistedState } from \"../helpers\";\n\nexport const useMovieFetch = (movieId) => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId);\n\n        // get directors only\n        const directors = credits.crew.filter(\n          (member) => member.job === \"Director\"\n        );\n        setState({\n          ...movie,\n          actors: credits.cast,\n          directors,\n        });\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n    const sessionState = isPersistedState(movieId);\n    if (sessionState) {\n      setState(sessionState);\n      setLoading(false);\n      return;\n    }\n\n    fetchMovie();\n  }, [movieId]);\n\n  // Write to the sessionStorage\n  useEffect(() => {\n    sessionStorage.setItem(movieId, JSON.stringify(state));\n  }, [movieId, state]);\n  return { state, loading, error };\n};\n","import React from \"react\";\n\nconst NotFound = () => <div> Not Found </div>;\n\nexport default NotFound;\n","import React from \"react\";\n// Routing\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// Styles\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\";\n\nconst App = () => (\n  <Router>\n    <Header />\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/:movieId\" element={<Movie />} />\n      <Route path=\"/*\" element={<NotFound />} />\n    </Routes>\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}